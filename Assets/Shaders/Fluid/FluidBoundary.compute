// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Textures
RWTexture2D<float4> State;
RWTexture2D<float> Pressure;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	// Read from render texture
	float4 state = State[id.xy];
	float pressure = Pressure[id.xy];

	// Get the dimensions of the RenderTexture
	uint width, height;
	State.GetDimensions(width, height);

	// Calculate offset for boundary
	int2 offset = int2(0, 0);

	if (id.x == 0)					{ offset += int2(1, 0); }
	else if (id.x == width-1)		{ offset -= int2(1, 0); }

	if (id.y == 0)					{ offset += int2(0, 1); }
	else if (id.y == height-1)		{ offset -= int2(0, 1); }

	// Set boundary conditions
	if (offset.x != 0 || offset.y != 0) {

		// Get state at offset
		float4 offsetState = State[id.xy + offset];
		float offsetPressure = Pressure[id.xy + offset];

		// Set density, temperature
		state.x = offsetState.x;
		state.w = offsetState.w;

		// Set velocities
		state.y = (offset.x != 0) ? -offsetState.y : offsetState.y;
		state.z = (offset.y != 0) ? -offsetState.z : offsetState.z;

		// Set pressure
		pressure = offsetPressure;
	}

	// Write to texture
	State[id.xy] = state;
	Pressure[id.xy] = pressure;
}
