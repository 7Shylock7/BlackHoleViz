// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Textures
RWTexture2D<float4> State;
RWTexture2D<float> Pressure;

// Parameters
float lengthScale;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	// Read from texture
	float xL = Pressure[id.xy + int2(-1, 0)];
	float xR = Pressure[id.xy + int2(1, 0)];
	float xD = Pressure[id.xy + int2(0, -1)];
	float xU = Pressure[id.xy + int2(0, 1)];
	float4 state = State[id.xy];

	// Subtract gradient
	state.y -= (xR - xL) / lengthScale;
	state.z -= (xU - xD) / lengthScale;

	// Write back to texture
	State[id.xy] = state;

}
