// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Textures
RWTexture2D<float> Pressure;
RWTexture2D<float> Divergence;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	// Read from texture
	float bC = Divergence[id.xy];
	float xC = Pressure[id.xy];
	float xL = Pressure[id.xy + int2(-1,  0)];
	float xR = Pressure[id.xy + int2( 1,  0)];
	float xD = Pressure[id.xy + int2( 0, -1)];
	float xU = Pressure[id.xy + int2( 0,  1)];

	// Perform Jacobi iteration step
	float alpha = -xC * xC;
	float beta = 4.0;
	float xNew = (xL + xR + xD + xU + alpha * bC) / beta;

	// Write back to texture
	Pressure[id.xy] = xNew;

}
