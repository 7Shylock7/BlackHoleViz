// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Textures
RWTexture2D<float4> State;

// Parameters
float timeStep;
float lengthScale;
float nu_0;
float D_0;
float lambda_0;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	// Read from texture
	float4 x =  State[id.xy];
	float4 xL = State[id.xy + int2(-1,  0)];
	float4 xR = State[id.xy + int2( 1,  0)];
	float4 xD = State[id.xy + int2( 0, -1)];
	float4 xU = State[id.xy + int2( 0,  1)];

	// Perform Jacobi iteration step
	float4 c = float4(D_0, nu_0, nu_0, lambda_0);
	float4 alpha = c * timeStep / (lengthScale * lengthScale);
	float4 xNew = x + alpha * (xL + xR + xD + xU - 4.0 * x);

	// Write back to texture
	State[id.xy] = xNew;

}
