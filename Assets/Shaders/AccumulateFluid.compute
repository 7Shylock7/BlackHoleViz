// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Input/output textures
RWTexture2D<float4> State;
RWTexture2D<float4> k1;
RWTexture2D<float4> k2;
RWTexture2D<float4> k3;
RWTexture2D<float4> k4;

// Input variables
float timeStep;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{

	// Accumulate RK4 textures
	float4 stateOut = k1[id.xy] + 2.0 * k2[id.xy] + 2.0 * k3[id.xy] + k4[id.xy];
	stateOut *= timeStep / 6.0;
	stateOut += State[id.xy];
	
	// Clamp density
	stateOut.x = max(stateOut.x, 0.0);

	// Write back to state texture
	State[id.xy] = stateOut;
}
